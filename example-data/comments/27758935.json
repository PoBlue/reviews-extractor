[{"category": "awesome", "content_id": 27758935, "id": 1698559, "user_id": 25252, "body": "Nice job using `discrete_distibution` to resample the particles proportional to their weights.\n\nAnother option would be to implement the `resampling wheel` discussed by Sebastian Thrun in the [Python Particle Filters lesson](https://classroom.udacity.com/nanodegrees/nd013/parts/40f38239-66b6-46ec-ae68-03afd8a601c8/modules/2c318113-724b-4f9f-860c-cb334e6e4ad7/lessons/48704330/concepts/487480820923).", "position": 185, "created_at": "2017-05-22T22:42:43.921Z", "updated_at": "2017-05-22T22:42:43.921Z"}, {"category": "nitpick", "content_id": 27758935, "id": 1698558, "user_id": 25252, "body": "There are elements of this calculation (such as the denominator) that don't depend on the particle, landmark, or observation. I suggest calculating them separately outside of the particle loop and reusing these values.", "position": 163, "created_at": "2017-05-22T22:42:34.248Z", "updated_at": "2017-05-22T22:42:34.248Z"}, {"category": "awesome", "content_id": 27758935, "id": 1698556, "user_id": 25252, "body": "Nice work filtering the landmarks for only those inside the sensor range before associating them with the observations.", "position": 147, "created_at": "2017-05-22T22:42:22.244Z", "updated_at": "2017-05-22T22:42:22.244Z"}, {"category": "nitpick", "content_id": 27758935, "id": 1698554, "user_id": 25252, "body": "This part of your prediction step could be refactored to avoid constructing new `normal_dsitribution` objects for every particle. You could define a single set of 3 `normal_dsitribution` objects (one each for `x`, `y`, and `theta`) all centred around 0. You can then add the noise to each property for each particle. This is an example of what this would look like for just the `x` property:\n\n```\nnormal_distribution<double> dist_x(0, std_pos[0]);\n// Enter the loop and calculate the new value of `x`...\nparticles[i].x += dist_x(gen);\n```", "position": 69, "created_at": "2017-05-22T22:42:09.476Z", "updated_at": "2017-05-22T22:42:09.476Z"}, {"category": "awesome", "content_id": 27758935, "id": 1698552, "user_id": 25252, "body": "Great job handling both zero and non-zero yaw rates!", "position": 62, "created_at": "2017-05-22T22:41:58.654Z", "updated_at": "2017-05-22T22:41:58.654Z"}]