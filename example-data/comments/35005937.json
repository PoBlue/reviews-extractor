[{"category": "nitpick", "content_id": 35005937, "id": 1898107, "user_id": 10086, "body": "## Tip :zap: ##\nSince there's no code inside ``loadFeed()``'s anonymous callback function, this piece of code can be simplified to:\n```\nloadFeed(0, done);\n```", "position": 93, "created_at": "2017-07-05T19:50:37.514Z", "updated_at": "2017-07-05T19:50:37.514Z"}, {"category": "nitpick", "content_id": 35005937, "id": 1898102, "user_id": 10086, "body": "### Code Quality ###\n**Udacity Style Guide recommends:**\n- ``forEach`` or ``for`` loops are preferred over ``for``-``in`` loops when iterating over an array.\n\n\nSee [requirement and examples here](https://udacity.github.io/frontend-nanodegree-styleguide/javascript.html#for-in-loop)\n\nSee [StackOverflow answer here](https://stackoverflow.com/questions/500504/why-is-using-for-in-with-array-iteration-such-a-bad-idea) on why you shouldn't use ``for`` - ``in``", "position": 34, "created_at": "2017-07-05T19:50:07.926Z", "updated_at": "2017-07-05T19:50:07.926Z"}, {"category": "awesome", "content_id": 35005937, "id": 1898097, "user_id": 10086, "body": "All good here with menu testing", "position": 79, "created_at": "2017-07-05T19:49:47.419Z", "updated_at": "2017-07-05T19:49:47.419Z"}, {"category": "awesome", "content_id": 35005937, "id": 1898094, "user_id": 10086, "body": "Nice job with `RSS Feeds` testings!", "position": 52, "created_at": "2017-07-05T19:49:19.099Z", "updated_at": "2017-07-05T19:49:19.099Z"}, {"category": "critical", "content_id": 35005937, "id": 1898093, "user_id": 10086, "body": "The original *TODO* comment specifically ask for checking if there is at least 01 `.entry` element in the `.feed` container. The current implementation doesn't meet this requirement.\n\nPlease rewrite the jQuery implementation.\n\n## Tip :zap: ##\nYou can select elements that are child of a container as this example:\n\n```\ndocument.querySelectorAll('.parent-class .child-class'); // Vanilla JS method\n\n$('.parent-class .child-class'); // jQuery method\n```", "position": 99, "created_at": "2017-07-05T19:49:07.865Z", "updated_at": "2017-07-05T19:49:07.865Z"}]