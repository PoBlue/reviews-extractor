[{"category": "awesome", "content_id": 35597112, "id": 1916495, "user_id": 10086, "body": "## Did you know :zap:\n\nIt is possible to perform data binding on `infowindow` to implement the MVVM pattern for `infowindow`'s content, too (though I'd still prefer the current method of using `InfoWindow.setContent`)\n\nIf you're interested, please read [this discussion](https://discussions.udacity.com/t/knockout-binding-from-infowindow/189235/12), as well as check out [this example](https://jsfiddle.net/SittingFox/nr8tr5oo/), written by mentor `@stacy`.", "position": 78, "created_at": "2017-07-09T05:21:19.563Z", "updated_at": "2017-07-09T05:21:19.563Z"}, {"category": "awesome", "content_id": 35597112, "id": 1916494, "user_id": 10086, "body": "## For Future Reference :zap:\nWe can actually perform Ajax request using vanilla Javascript code, which is __AWESOME__! :star2: There's no need to use jQuery.\n\nThere are very good articles on using Fetch API to implement Ajax request here:\n- [fetch API by David Walsh](https://davidwalsh.name/fetch)\n- [Introduction to fetch() @Google Developers](https://developers.google.com/web/updates/2015/03/introduction-to-fetch?hl=en)\n\nNote that Javascript also has `XMLHttpRequest` API to perform Ajax request, but it's not very friendly to use since its syntax is too hard to read.", "position": 91, "created_at": "2017-07-09T05:21:01.121Z", "updated_at": "2017-07-09T05:21:01.121Z"}, {"category": "awesome", "content_id": 35597112, "id": 1916493, "user_id": 10086, "body": "## For Future Reference :zap:\n\nI strongly recommend learning the new version of Javascript - ES6 (ECMAScript 6). It has been officially approved and is widely adopted by programmers. Popular frameworks like Angular 2, React, etc. all prioritize ES6 syntax.\n\nES6 introduces new syntax/concepts, such as:\n- `let` / `const` variables\n- Arrow functions, eg:\n  ```\n  let foo = () => {\n    // operations\n  };\n  ```\n- Module import\n- `Promise` - a new method to deal with asynchronous task (instead of the old callback function)\n- New way to implement Classes, eg:\n  ```\n  class Foo {\n    constructor(num) {\n      this.num = num;\n    }\n    \n    addNum(a) {\n      return this.num += a;\n    }\n  }\n  ```\n- And many more... :star2:\n\n### Resources :books\n- [ES6 - JavaScript Improved @Udacity](https://www.udacity.com/course/es6-javascript-improved--ud356)\n- [Beginners ES6 and Babel Tutorial @HTML5 Hive](https://html5hive.org/es6-and-babel-tutorial/)\n- [ECMAScript 6 Tutorial by ccoenraets](http://ccoenraets.github.io/es6-tutorial/)\n\nNote that ES6 is usually used with Babel compiler (and a build process, such as `webpack`, `gulp`, etc.) for browser compatability fallback. So you will also learn about them in the resources above.", "position": 0, "created_at": "2017-07-09T05:20:26.607Z", "updated_at": "2017-07-09T05:20:26.607Z"}, {"category": "awesome", "content_id": 35597112, "id": 1916492, "user_id": 10086, "body": "Excellent job showing / hiding `marker`s efficiently with `setVisible` method of the `Marker` class!", "position": 144, "created_at": "2017-07-09T05:20:17.015Z", "updated_at": "2017-07-09T05:20:17.015Z"}, {"category": "nitpick", "content_id": 35597112, "id": 1916490, "user_id": 10086, "body": "**App Functionality** allows logging the error warnings by jQuery, Javascript DOM methods or other libraries, but it's recommended that we utilize the MVVM pattern.\nI'd recommend to refactor your code to use MVVM pattern to log this warning to the UI by using [`text` binding](http://knockoutjs.com/documentation/text-binding.html)", "position": 7, "created_at": "2017-07-09T05:18:42.311Z", "updated_at": "2017-07-09T05:18:42.311Z"}]