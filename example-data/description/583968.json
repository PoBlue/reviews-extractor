{"status": "completed", "result": "failed", "grader_agent": "human", "id": 583968, "user_id": 108072, "notes": null, "repo_url": null, "created_at": "2017-07-02T21:38:19.744Z", "updated_at": "2017-07-03T11:57:17.434Z", "commit_sha": null, "grader_id": 15142, "assigned_at": "2017-07-03T02:26:22.696Z", "price": "20.0", "completed_at": "2017-07-03T11:57:17.413Z", "archive_url": "https://udacity-reviews-uploads.s3.amazonaws.com/_submissions/zipfile/583968/rnn_project.zip", "zipfile": {"url": "https://udacity-reviews-uploads.s3.amazonaws.com/_submissions/zipfile/583968/rnn_project.zip"}, "udacity_key": null, "held_at": null, "status_reason": null, "result_reason": null, "type": null, "training_id": null, "files": [], "url": null, "annotation_urls": [], "general_comment": "Congratulations! All the heavy lifting is in the project. \n\nOnly tiny modifications to be made, I encourage you to quickly resubmit. \n\nKeep up the great work :muscle:", "hidden": false, "previous_submission_id": null, "nomination": null, "language": "en-us", "rubric_id": 806, "is_training": false, "canary_metadata": null, "checkmate_metadata": null, "escalated_at": null, "ungradeable_tag": null, "project_id": 299, "user": {"name": "Alberto", "udacity_key": "3651438633"}, "grader": {"name": "Cristian", "udacity_key": "5097880220"}, "project": {"id": 299, "name": "Recurrent Neural Networks"}, "rubric": {"description": "## Project Overview\n\nWelcome to the Recurrent Neural Networks (RNN) project in the AI Nanodegree! \n\nIn this project you'll build RNNs that can generate sequences based on input data - with a focus on two applications: With the first we'll use real market data in order to predict future Apple stock prices using an RNN model. The second one will be trained on Sir Arthur Conan Doyle's classic novel Sherlock Holmes and will generate  wacky sentences based on it that may - or may not - become the next great Sherlock Holmes novel!\n\n## Project Instructions for Local Machine Execution\n\n1. Clone the project and navigate to the downloaded folder.\n  \n  ``` \n    git clone https://github.com/udacity/aind2-rnn\n    cd aind2-rnn\n  ```\n2. Download the necessary Python modules.\n\n  ```\n    pip install -r requirements.txt\n  ```\n3. Open the notebook and follow the instructions.\n  \n  ```\n    jupyter notebook RNN_project.ipynb\n  ```\n\n__NOTE:__ While some code has already been implemented to get you started, you will need to implement additional functionality to successfully answer all of the questions included in the notebook. Unless requested, do not modify code that has already been included.\n\n__NOTE:__ In the notebook, you will need to train an RNN in Keras.  If your RNN is taking too long to train, feel free to pursue one of the options under the section __Accelerating the Training Process__ below.\n\n\n## Evaluation\n\nYour project will be reviewed by a Udacity reviewer against the RNN project [rubric](https://review.udacity.com/#!/rubrics/806/view).  Review this rubric thoroughly and self-evaluate your project before submission.  All criteria found in the rubric must met specifications for you to pass.\n\n\n## Project Submission\nIf you have not already installed the Udacity Project Assistant client, please do so as directed in the project README.\n\nWhen you execute `udacity submit`, the script will run `jupypter nbconvert --to html RNN_project.ipynb` to export your notebook to html.  It will then include the files\n\n- `my_answers.py`\n- `RNN_project.ipynb`\n- `RNN_project.html`\n\nin a zip archive with a name like rnn-674.zip.  Please submit this exact file to the reviews system.  In other words, you must first submit your solution to the project assistant and then use the resulting file when submitting to Udacity's reviewer network.\n\n\n### Ready to submit your project?\n\nClick on the \"Submit Project\" button and follow the instructions to submit!", "nomination_eligible": false}}