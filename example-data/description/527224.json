{"status": "completed", "result": "failed", "grader_agent": "human", "id": 527224, "user_id": 59696, "notes": null, "repo_url": null, "created_at": "2017-05-31T18:26:47.698Z", "updated_at": "2017-05-31T20:01:19.085Z", "commit_sha": null, "grader_id": 1456, "assigned_at": "2017-05-31T18:37:19.873Z", "price": "22.0", "completed_at": "2017-05-31T20:01:19.074Z", "archive_url": "https://udacity-reviews-uploads.s3.amazonaws.com/_submissions/zipfile/527224/logs_2.zip", "zipfile": {"url": "https://udacity-reviews-uploads.s3.amazonaws.com/_submissions/zipfile/527224/logs_2.zip"}, "udacity_key": null, "held_at": null, "status_reason": null, "result_reason": null, "type": null, "training_id": null, "files": [], "url": null, "annotation_urls": [], "general_comment": "You are almost there! You just need to add a couple details to your README and you are all set.\n\nKeep up the great work!", "hidden": false, "previous_submission_id": null, "nomination": null, "language": "en-us", "rubric_id": 277, "is_training": false, "canary_metadata": null, "checkmate_metadata": null, "escalated_at": null, "ungradeable_tag": null, "project_id": 195, "user": {"name": "Joseph", "udacity_key": "9705348556"}, "grader": {"name": "Christopher", "udacity_key": "85131605"}, "project": {"id": 195, "name": "Logs Analysis"}, "rubric": {"description": "The database for this project can be found [here](https://d17h27t6h515a5.cloudfront.net/topher/2016/August/57b5f748_newsdata/newsdata.zip).\r\n\r\nThe student will build a reporting tool in Python to answer several questions and provide the information in a README file.\r\n\r\nStudent instructions:\r\n\r\n> Your task is to create a reporting tool that prints out reports (in plain text) based on the data in the database. This reporting tool is a Python program using the `psycopg2` module to connect to the database.\r\n\r\n> # So what are we reporting, anyway?\r\n\r\n> Here are the questions the reporting tool should answer. The example answers given aren't the right ones, though!\r\n\r\n> **1. What are the most popular three articles of all time?** Which articles have been accessed the most? Present this information as a sorted list with the most popular article at the top.\r\n\r\n> **Example:**\r\n\r\n> * \"Princess Shellfish Marries Prince Handsome\" \u2014 1201 views\r\n> * \"Baltimore Ravens Defeat Rhode Island Shoggoths\" \u2014 915 views\r\n> * \"Political Scandal Ends In Political Scandal\" \u2014 553 views\r\n\r\n\r\n> **2. Who are the most popular article authors of all time?** That is, when you sum up all of the articles each author has written, which authors get the most page views? Present this as a sorted list with the most popular author at the top.\r\n\r\n> **Example:**\r\n\r\n> * Ursula La Multa \u2014 2304 views\r\n> * Rudolf von Treppenwitz \u2014 1985 views\r\n> * Markoff Chaney \u2014 1723 views\r\n> * Anonymous Contributor \u2014 1023 views\r\n\r\n> **3. On which days did more than 1% of requests lead to errors?** The log table includes a column status that indicates the HTTP status code that the news site sent to the user's browser. (Refer back to this lesson if you want to review the idea of HTTP status codes.)\r\n\r\n> **Example:**\r\n\r\n> * July 29, 2016 \u2014 2.5% errors\r\n\r\n> # Good coding practices\r\n\r\n> ## SQL style\r\n\r\n> Each one of these questions can be answered with a single database query. Your code should get the database to do the heavy lifting by using joins, aggregations, and the `where` clause to extract just the information you need, doing minimal \"post-processing\" in the Python code itself.\r\n\r\n> In building this tool, you may find it useful to add views to the database. You are allowed and encouraged to do this! However, if you create views, make sure to put the **create view** commands you used into your lab's README file so your reviewer will know how to recreate them.\r\n\r\n> ## Python code quality\r\n\r\n> Your code should be written with good Python style. The [PEP8 style guide](https://www.python.org/dev/peps/pep-0008/) is an excellent standard to follow. You can do a quick check using the `pep8` command-line tool.\r\n\r\nThe student's code should include the necessary SQL queries for each of these questions. SQL should be formatted properly and Python code should be written using accepted PEP8 Python style.", "nomination_eligible": false}}