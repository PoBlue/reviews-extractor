{"status": "completed", "result": "passed", "grader_agent": "human", "id": 534919, "user_id": 140929, "notes": null, "repo_url": null, "created_at": "2017-06-05T03:44:58.725Z", "updated_at": "2017-06-06T14:16:16.077Z", "commit_sha": null, "grader_id": 32286, "assigned_at": "2017-06-06T13:37:10.584Z", "price": "13.0", "completed_at": "2017-06-06T14:16:16.071Z", "archive_url": "https://udacity-reviews-uploads.s3.amazonaws.com/_submissions/zipfile/534919/CodeYourQuiz__2_.zip", "zipfile": {"url": "https://udacity-reviews-uploads.s3.amazonaws.com/_submissions/zipfile/534919/CodeYourQuiz__2_.zip"}, "udacity_key": "6074525526654976", "held_at": null, "status_reason": null, "result_reason": null, "type": null, "training_id": null, "files": [], "url": null, "annotation_urls": [], "general_comment": "Congratulations, you have passed the project:clap::rocket:\n\nAt the beginning of the game, if the user input invalid text rather than required level names, the program would crash, you could use a `while` loop or exception handling feature in python to fix the issue.:yum: To keep it fun, I will leave it to you to explore how to implement it.:smile:.", "hidden": false, "previous_submission_id": null, "nomination": null, "language": "en-us", "rubric_id": 83, "is_training": false, "canary_metadata": null, "checkmate_metadata": null, "escalated_at": null, "ungradeable_tag": null, "project_id": 83, "user": {"name": "Anurag", "udacity_key": "5457438694"}, "grader": {"name": "Huang", "udacity_key": "229952687"}, "project": {"id": 83, "name": "Code Your Own Quiz"}, "rubric": {"description": "In this project, you will use the Python programming language to build your own quiz. You will use a fill-in-the blank style to create a quiz that can even be used as a study tool to help you remember important vocabulary.\n\n### 1 - Game Review\nIn this portion of the review, your reviewer will be checking to make sure the game works the way it's supposed to. See the rubric below for exact specs.\n\n### 2 - Code Review\nYour reviewer will also look at the Python code you've written and provide feedback on:\n\n* **Use of Variables**: Your code should take advantage of variables and variable **names** should reflect the **values** they store. \n\n* **Functions**: Your code should use functions appropriately to avoid repetition. Function parameters should have logical names and should all be used in the body of the function.\n\n* **Appropriate use of Data**: Data types (`strings` vs `lists` for example) should be used appropriately. \n\n* **Appropriate use of other coding techniques**: Your code should use statements like `if`, `elif`, `else`, `while`, etc... appropriately.\n\n* **Each function includes a comment:** Comments explain function behavior, inputs, and outputs (if applicable.)\n\nThe rubric that will be used is [here](https://review.udacity.com/#!/projects/3568138824/rubric).", "nomination_eligible": false}}