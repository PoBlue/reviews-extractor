{"status": "completed", "result": "passed", "grader_agent": "human", "id": 521530, "user_id": 129240, "notes": "I used stackoverflow alot for python functions/tricks I havent used recently .  For example,  for things like sorting a list of coordinates  \" sorted_left = sorted(left_coordinates , key=lambda k: [k[0], k[1]])  \".\n\nI doubt thats considered plagiarism but just FYI", "repo_url": "https://github.com/hangulo/SDC-P1-Lane-Tracking", "created_at": "2017-05-28T19:44:26.635Z", "updated_at": "2017-05-28T20:12:37.772Z", "commit_sha": "f5fa0ab53fca4d1918f9c0305def3a1c41e9a9fc", "grader_id": 48300, "assigned_at": "2017-05-28T19:54:57.958Z", "price": "10.0", "completed_at": "2017-05-28T20:12:37.769Z", "archive_url": "https://udacity-reviews-uploads.s3.amazonaws.com/_submissions/zipfile/521530/archive.zip", "zipfile": {"url": "https://udacity-reviews-uploads.s3.amazonaws.com/_submissions/zipfile/521530/archive.zip"}, "udacity_key": null, "held_at": null, "status_reason": null, "result_reason": null, "type": null, "training_id": null, "files": [], "url": null, "annotation_urls": [], "general_comment": "All in all I would like you to congratulate you for taking an amazing first step in this journey!! :clap: :clap: :clap:", "hidden": false, "previous_submission_id": null, "nomination": "", "language": "en-us", "rubric_id": 322, "is_training": false, "canary_metadata": null, "checkmate_metadata": null, "escalated_at": null, "ungradeable_tag": null, "project_id": 206, "user": {"name": "Hector", "udacity_key": "10582665102"}, "grader": {"name": "Usman", "udacity_key": "1042588684"}, "project": {"id": 206, "name": "Finding Lane Lines on the Road"}, "rubric": {"description": "The student's goal in this project is to write an image analysis pipeline that identifies lane lines on the road.  The student should develop this pipeline in the Jupyter Notebook provided and submit the notebook as their solution. There is also a brief report writeup reflecting on their work that students should include as well.  \n\nThe goal is to reasonably recreate the example solution provided in the video clip \"P0_example1.mp4\".  The student's solution doesn't need to look exactly like the video example, but as long as their algorithm is drawing the lines on the road in the right general location, that's acceptable.\n\nPlease view [project information here](https://github.com/ryan-keenan/P0_prototype) and refer to the [reviewer instructions here](https://docs.google.com/document/d/1mLdugmFhYy64dJixiFK5h1glz9o_rHvHfpo9do1Ite0/pub?embedded=true) before beginning your evaluation.\n\n<h3>**Student Instructions**</h3>\nNavigate to [the project repository on GitHub](https://github.com/udacity/CarND-LaneLines-P1) and have a look at the Readme file for detailed instructions on how to get setup with Python and OpenCV and how to access the Jupyter Notebook containing the project code.  You will need to download, or `git clone`, this repository in order to complete the project.\n\nIn this project, you will be writing code to identify lane lines on the road, first in an image, and later in a video stream (really just a series of images).  To complete this project you will use the tools you learned about in the lesson, and build upon them.  \n\nYour first goal is to write code including a series of steps (pipeline) that identify and draw the lane lines on a few test images.  Once you can successfully identify the lines in an image, you can cut and paste your code into the block provided to run on a video stream.  \n\nYou will then refine your pipeline with parameter tuning and by averaging and extrapolating the lines. \n\nFinally, you'll make a brief writeup report. The github repository has a `writeup_template.md` that can be used as a guide.\n\nHave a look at the video clip called \"P1_example.mp4\" in the repository to see an example of what your final output should look like.  Two videos are provided for you to run your code on.  These are called \"solidWhiteRight.mp4\" and solidYellowLeft.mp4\". \n\nOnce you have completed your project, be sure to check through the [project rubric](https://review.udacity.com/#!/rubrics/322/view) before you submit. Your project will be evaluated as \u201cmeets specifications\u201d only if it meets specifications in all the criteria. If you see any category where you do not meet specifications, make sure you revise your project to meet the rubric criteria. When you are finished, save and submit your Jupyter Notebook for review. ", "nomination_eligible": true}}