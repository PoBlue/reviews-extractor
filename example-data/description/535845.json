{"status": "completed", "result": "failed", "grader_agent": "human", "id": 535845, "user_id": 72796, "notes": "Please see comments on MPC.cpp and main.cpp for details on the model and other rubric topics.", "repo_url": null, "created_at": "2017-06-05T16:54:36.190Z", "updated_at": "2017-06-09T13:47:29.544Z", "commit_sha": null, "grader_id": 63781, "assigned_at": "2017-06-09T13:14:31.339Z", "price": "26.0", "completed_at": "2017-06-09T13:47:29.542Z", "archive_url": "https://udacity-reviews-uploads.s3.amazonaws.com/_submissions/zipfile/535845/CarND-MPC-Project_MGO.zip", "zipfile": {"url": "https://udacity-reviews-uploads.s3.amazonaws.com/_submissions/zipfile/535845/CarND-MPC-Project_MGO.zip"}, "udacity_key": null, "held_at": null, "status_reason": null, "result_reason": null, "type": null, "training_id": null, "files": [], "url": null, "annotation_urls": [], "general_comment": "I am happy that I could review your project and seeing your hard work behind. I would say you are almost there, just read the remarks and you will be able to upload a successful submission very soon. Keep up the good work.\n\nI would suggest putting the answers/descriptions required in the rubric points into README.md or into a separate text/pdf file.\nPlease, always consider all the rubric points as the evaluation is based strictly on them.", "hidden": false, "previous_submission_id": null, "nomination": "", "language": "en-us", "rubric_id": 896, "is_training": false, "canary_metadata": null, "checkmate_metadata": null, "escalated_at": null, "ungradeable_tag": null, "project_id": 295, "user": {"name": "Marcos", "udacity_key": "9613548777"}, "grader": {"name": "M\u00e1t\u00e9", "udacity_key": "6592283597"}, "project": {"id": 295, "name": "Model Predictive Control (MPC)"}, "rubric": {"description": "What should the student demonstrate?\n\nThe student should demonstrate they know how to implement MPC and tune the model such that the vehicle safely drives around the track.\n\nThere's a second component to the project, being the variability of the speed. The speed limit was greatly increased from the behavioral cloning project, 30mph to 100mph. There is NO REQUIREMENT on the speed the student can pass the track on. This is meant to be an extra fun part.\n\nWhat will they submit?\n\nThe student will submit a fork of the repo: https://github.com/udacity/CarND-MPC-Project.\n\nWhat should the reviewer have?\n\nAs the reviewer you have the appropriate version of the simulator and [uWebSockets](https://github.com/uWebSockets/uWebSockets), [CppAd](https://www.coin-or.org/CppAD/), and [Ipopt](https://projects.coin-or.org/Ipopt) installed.\n\n1. Clone/fork the project's template files from the [project repository](https://github.com/udacity/CarND-MPC-Project). (Note: Please do not submit your project as a pull request against our repo!)\n2. Choose your state, input(s), dynamics, constraints and implement MPC.\n3. Test your solution on basic examples.\n4. Test your solution on the simulator! \n5. When the vehicle is able to drive successfully around the track, submit! ***Remember to include a separate file in .txt, .md, .html, or .pdf format addressing the questions in the [rubric](https://review.udacity.com/#!/rubrics/896/view).***\n6. Try to see how fast you get the vehicle to **SAFELY** go!", "nomination_eligible": true}}