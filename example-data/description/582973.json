{"status": "completed", "result": "passed", "grader_agent": "human", "id": 582973, "user_id": 59369, "notes": null, "repo_url": null, "created_at": "2017-07-02T09:54:26.028Z", "updated_at": "2017-07-02T10:46:35.443Z", "commit_sha": null, "grader_id": 42143, "assigned_at": "2017-07-02T10:38:47.374Z", "price": "26.0", "completed_at": "2017-07-02T10:46:35.442Z", "archive_url": "https://udacity-reviews-uploads.s3.amazonaws.com/_submissions/zipfile/582973/P5-MPC.zip", "zipfile": {"url": "https://udacity-reviews-uploads.s3.amazonaws.com/_submissions/zipfile/582973/P5-MPC.zip"}, "udacity_key": null, "held_at": null, "status_reason": null, "result_reason": null, "type": null, "training_id": null, "files": [], "url": null, "annotation_urls": [], "general_comment": "You did a great job on implementing the Model Predictive Control! Your controller is able to effortlessly steer the car around the track, while also staying safe in the sharp turns. Your code is structured very well and builds without any problems. Your report is also clear and to the point! I have left some remarks in the code review on how you could further improve your code in some areas.\n\nThis marks the end of the second term, I wish you all the best for the last term!", "hidden": false, "previous_submission_id": null, "nomination": "", "language": "en-us", "rubric_id": 896, "is_training": false, "canary_metadata": null, "checkmate_metadata": null, "escalated_at": null, "ungradeable_tag": null, "project_id": 295, "user": {"name": "Sj", "udacity_key": "u341057"}, "grader": {"name": "Wolfgang", "udacity_key": "8615041259"}, "project": {"id": 295, "name": "Model Predictive Control (MPC)"}, "rubric": {"description": "What should the student demonstrate?\n\nThe student should demonstrate they know how to implement MPC and tune the model such that the vehicle safely drives around the track.\n\nThere's a second component to the project, being the variability of the speed. The speed limit was greatly increased from the behavioral cloning project, 30mph to 100mph. There is NO REQUIREMENT on the speed the student can pass the track on. This is meant to be an extra fun part.\n\nWhat will they submit?\n\nThe student will submit a fork of the repo: https://github.com/udacity/CarND-MPC-Project.\n\nWhat should the reviewer have?\n\nAs the reviewer you have the appropriate version of the simulator and [uWebSockets](https://github.com/uWebSockets/uWebSockets), [CppAd](https://www.coin-or.org/CppAD/), and [Ipopt](https://projects.coin-or.org/Ipopt) installed.\n\n1. Clone/fork the project's template files from the [project repository](https://github.com/udacity/CarND-MPC-Project). (Note: Please do not submit your project as a pull request against our repo!)\n2. Choose your state, input(s), dynamics, constraints and implement MPC.\n3. Test your solution on basic examples.\n4. Test your solution on the simulator! \n5. When the vehicle is able to drive successfully around the track, submit! ***Remember to include a separate file in .txt, .md, .html, or .pdf format addressing the questions in the [rubric](https://review.udacity.com/#!/rubrics/896/view).***\n6. Try to see how fast you get the vehicle to **SAFELY** go!", "nomination_eligible": true}}