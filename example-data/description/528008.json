{"status": "completed", "result": "failed", "grader_agent": "human", "id": 528008, "user_id": 76822, "notes": null, "repo_url": null, "created_at": "2017-06-01T02:56:03.129Z", "updated_at": "2017-06-01T06:12:17.290Z", "commit_sha": null, "grader_id": 24195, "assigned_at": "2017-06-01T03:06:43.901Z", "price": "18.0", "completed_at": "2017-06-01T06:12:17.284Z", "archive_url": "https://udacity-reviews-uploads.s3.amazonaws.com/_submissions/zipfile/528008/isolation-38839.zip", "zipfile": {"url": "https://udacity-reviews-uploads.s3.amazonaws.com/_submissions/zipfile/528008/isolation-38839.zip"}, "udacity_key": null, "held_at": null, "status_reason": null, "result_reason": null, "type": null, "training_id": null, "files": [], "url": null, "annotation_urls": [], "general_comment": "Overall, good job. :clap:\nJust include the suggested changes and you should be good to go.\nGood luck.", "hidden": false, "previous_submission_id": null, "nomination": null, "language": "en-us", "rubric_id": 680, "is_training": false, "canary_metadata": null, "checkmate_metadata": null, "escalated_at": null, "ungradeable_tag": null, "project_id": 240, "user": {"name": "Ramon", "udacity_key": "6991237865"}, "grader": {"name": "Ashwani", "udacity_key": "1943428556"}, "project": {"id": 240, "name": "Build a Game-Playing Agent"}, "rubric": {"description": "In this project students will design and implement a game-playing agent to play a game using adversarial search. The agent will play Isolation, a deterministic, two-player game of perfect information in which the players alternate turns moving between cells on a square grid (like a checkerboard). Whenever either player occupies a cell, that location is blocked for the rest of the game. The first player with no legal moves loses, and her opponent wins.\r\n\r\nAdditionally, students will design different heuristics to perform the adversarial search, and then they will analyze and compare the agents' performance.\r\n\r\nFinally, students will research a recent development in the field of artificial intelligence game-playing and present their findings in a one-to-three-page report.\r\n\r\nDownload the code for testing the assignment (as well as the student's starter code) here: https://github.com/udacity/artificial-intelligence/tree/master/build-a-game-playing-agent\r\n\r\n#### Part 1: Coding and Analysis\r\n\r\n1. Download the template code:<br />\r\n https://github.com/udacity/AIND-Isolation\r\n\r\n2. Implement the following functions in `game_agent.py`:\r\n\r\n  - MinimaxPlayer.minimax(): implement minimax search\r\n  - AlphaBetaPlayer.alphabeta(): implement minimax search with alpha-beta pruning\r\n  - AlphaBetaPlayer.get_move(): implement iterative deepening search\r\n  - custom_score(): implement your own best position evaluation heuristic\r\n  - custom_score_2(): implement your own alternate position evaluation heuristic\r\n  - custom_score_3(): implement your own alternate position evaluation heuristic\r\n\r\n3. For each of your three custom heuristic functions, evaluate the performance of the heuristic using the included `tournament.py` script. Then write up a brief summary of your results, describing the performance of the agent using the different heuristic functions verbally and using appropriate visualizations.\r\n\r\nSubmit the code file: `game_agent.py`<br />\r\nSubmit your analysis as: `heuristic_analysis.pdf`<br />\r\nYour analysis should conclude with a comparison of the different heuristics and your reasoning for choosing the heuristic you ultimately use in your submitted agent.\r\n\r\n\r\n#### Part 2: Research Review\r\n\r\nThe field of Artificial lIntelligence is continually changing and advancing. To be an AI Engineer at the cutting edge of your field, you'll need to be able to read and communicate some of these advancements with your peers. In order to help you get comfortable with this, in the second part of this project you will read a seminal paper in the field of Game-Playing and write a simple one page summary on it. Here are your instructions:\r\n\r\n1. Select a Game-Playing paper from the following list or another of your choosing:\r\n  - [Game Tree Searching by Min / Max Approximation](https://people.csail.mit.edu/rivest/pubs/Riv87c.pdf) by Ron Rivest, MIT (Fun fact, Ron Rivest is the R is in the RSA cryptographic protocol).\r\n  - [Deep Blue](https://pdfs.semanticscholar.org/ad2c/1efffcd7c3b7106e507396bdaa5fe00fa597.pdf) by the IBM Watson Team (Fun fact, Deep Blue beat Gary Kasparov in Chess in one of the most famous AI spectacles of the 20th century).\r\n  - [AlphaGo](https://storage.googleapis.com/deepmind-media/alphago/AlphaGoNaturePaper.pdf) by the DeepMind Team.\r\n  - Other paper on Game-Playing of your choosing.\r\n\r\n2. Write a simple one page summary of the paper covering the following:\r\n - A brief summary of the paper's goals or techniques introduced (if any).\r\n - A brief summary of the paper's results (if any).\r\n\r\nSubmit this as: `research_review.pdf`\r\n\r\n#### Submission\r\n\r\nSubmit your work by uploading a .zip file containing all your work, which must include the following files:\r\n- `game_agent.py`\r\n- `heuristic_analysis.pdf`\r\n- `research_review.pdf`\r\n\r\n#### Evaluation\r\n\r\n1. Make sure you pass all the tests in the repository.\r\n2. You will be evaluated according to the project rubric [here](https://review.udacity.com/#!/rubrics/680/view).", "nomination_eligible": false}}